import type { NextPage } from 'next';
import { useState } from 'react';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import {
  Box,
  Button,
  Input,
  InputRightElement,
  InputGroup,
  Select,
  Text,
  Tooltip,
} from '@chakra-ui/react';
import { CopyIcon } from '@chakra-ui/icons';
import axios from 'axios';

const Home: NextPage = () => {
  const [token, setToken] = useState('');
  const [bank, setBank] = useState<string>('');
  const [account, setAccount] = useState('');

  const handleBankSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setBank(event.target.value);
  };

  const handleAccountSelection = (
    event: React.ChangeEvent<HTMLSelectElement>
  ) => {
    setAccount(event.target.value);
  };
  const banksUrl: { [key: string]: string } = {
    BanKoga:
      'https://4tuf6rgud9.execute-api.us-east-1.amazonaws.com/dev/bankoga',
    BTG: 'https://lck1jwr4s9.execute-api.us-east-1.amazonaws.com/dev/btg',
    Nubank: 'https://2yuuqtkoed.execute-api.us-east-1.amazonaws.com/dev/nubank',
  };
  const handleGenerateToken = async () => {
    console.log(`${banksUrl[bank]}/client/get_code/${account}`);
    await axios
      .get(`${banksUrl[bank]}/client/get_code/${account}`)
      .then((res) => {
        console.log(res);
        setToken(res.data);
      });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Gravity Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Dashboard</h1>
        <Box justifyContent={'center'}>
          <Text fontSize="3xl" textAlign={'center'}>
            Gerador de tokens
          </Text>
          <Box
            display="flex"
            flexDir={'row'}
            justifyContent="space-between"
            padding={4}
          >
            <Select
              placeholder="Banco"
              marginRight={8}
              value={bank}
              onChange={handleBankSelection}
            >
              <option value="BanKoga">BanKoga</option>
              <option value="BTG">BTG</option>
              <option value="Nubank">Nubank</option>
            </Select>
            <Select
              placeholder="Usuario"
              value={account}
              onChange={handleAccountSelection}
            >
              <option value="000.000.000-00">000.000.000-00</option>
              <option value="123.456.789-00">123.456.789-00</option>
              <option value="123.456.789-01">123.456.789-01</option>
              <option value="123.456.789-02">123.456.789-02</option>
              <option value="123.456.789-03">123.456.789-03</option>
            </Select>
          </Box>
          <Box display="flex" flexDir={'row'} justifyContent="space-evenly">
            <InputGroup marginRight={8}>
              <Input
                placeholder="Seu token aparecerÃ¡ aqui"
                readOnly
                value={token}
              />
              <InputRightElement>
                <Tooltip label="Copiar Token">
                  <Button
                    variant={'ghost'}
                    onClick={() => {
                      navigator.clipboard.writeText(token);
                    }}
                  >
                    <CopyIcon color="gray.500" />
                  </Button>
                </Tooltip>
              </InputRightElement>
            </InputGroup>

            <Button padding={'0 24px 0'} onClick={handleGenerateToken}>
              Gerar Token
            </Button>
          </Box>
        </Box>
      </main>
    </div>
  );
};

export default Home;
